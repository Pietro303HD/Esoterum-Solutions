# suppress inspection "UnusedProperty" for whole file

#region distribution
block.eso-test-binary-block.name = Test Binary Block
block.eso-test-binary-block.description = huh?
block.eso-test-binary-block.details = How did we get here?

block.eso-binary-wire.name = Binary Wire
block.eso-binary-wire.description = Basic signal transmission medium. Takes input from any side and forwards it to the front.

block.eso-binary-set-wire.name = Configurable Binary Wire
block.eso-binary-set-wire.description = Basic signal transmission medium. Only takes input from set sides and forwards it to the front.

block.eso-binary-junction.name = Binary Junction
block.eso-binary-junction.description = Basic wire management solution. Forwards input from one side to the opposite.

block.eso-binary-node.name = Binary Node
block.eso-binary-node.description = Wireless signal transmission solution. Takes input and transfers it to the connected node where it will output in all directions.

block.eso-binary-router.name = Binary Router
block.eso-binary-router.description = Basic signal distribution solution. Takes input and forwards to all directions.
block.eso-binary-router.details = It has passback, just like the real thing!

block.eso-binary-switch.name = Binary Switch
block.eso-binary-switch.description = Primary signal source. Outputs to all sides when enabled, press to toggle.

block.eso-binary-button.name = Binary Button
block.eso-binary-button.description = Primary signal source. Outputs a signal to all sides for a short period of time after being pressed.

block.eso-binary-clock.name = Binary Clock
block.eso-binary-clock.description = Secondary signal source. Outputs a signal to every direction at a set interval. Can be configured.
#endregion distribution

#region gates
block.eso-binary-AND.name = AND Gate \n[lightgray](Variant A)[]
block.eso-binary-AND.description = Essential logic gate. Outputs to the front if input from left and right is high.
block.eso-binary-AND-B.name = AND Gate \n[lightgray](Variant B)[]
block.eso-binary-AND-B.description = Essential logic gate. Outputs to the front if input from back and right is high.
block.eso-binary-AND-C.name = AND Gate \n[lightgray](Variant C)[]
block.eso-binary-AND-C.description = Essential logic gate. Outputs to the front if input from back and left is high.

block.eso-binary-XOR.name = XOR Gate
block.eso-binary-XOR.description = Intermediate logic gate. Outputs to the front if only one input from left and right is high.

block.eso-binary-NOT.name = NOT Gate
block.eso-binary-NOT.description = Essential logic gate. Inverts incoming signal from back, outputs to front.
#endregion gates

#region delays
block.eso-binary-buffer.name = Binary Buffer
block.eso-binary-buffer.description = Forwards input from back to front after 1 tick.

block.eso-binary-delay-gate.name = Timed Buffer Gate
block.eso-binary-delay-gate.description = Outputs a signal to the front when back input is high for longer than a set duration.
block.eso-binary-delay-gate.details = Buffer 2: Configurable Boogaloo

block.eso-binary-wait-gate.name = Delay Gate
block.eso-binary-wait-gate.description = Outputs a signal delayed by a set amount after back input is high.

block.eso-binary-pulse-extender.name = Binary Pulse Extender
block.eso-binary-pulse-extender.description = Output signal will continue to last for a set duration after back input becomes low.
#endregion delays

#region misc
block.eso-binary-latch.name = D-Latch
block.eso-binary-latch.description = Data storage solution. Stores signal from right if left is high, outputs to front.
block.eso-binary-latch.details = Cry about it, made by Pietro enterprises.

block.eso-binary-monostable.name = Binary Monostable
block.eso-binary-monostable.description = Outputs a signal to the front for a set duration when back input is high.
#endregion misc

#region outputs
block.eso-binary-led.name = Binary Led
block.eso-binary-led.description = Basic user-readable output medium. Recieves input from the sides and turns it to color, forwards to front.

block.eso-binary-note-block.name = Note Block
block.eso-binary-note-block.description = Engineer morale maintenance solution. Plays a note when input from back is high, forwards to front.
block.eso-binary-note-block.details = "DING DING DING DING DING DING DING DINGDINGDING"
#endregion outputs